{"version":3,"sources":["justext.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","main","htmlText","stoplist","arguments","length","undefined","format","options","lengthLow","LENGTH_LOW_DEFAULT","lengthHigh","LENGTH_HIGH_DEFAULT","stopwordsLow","STOPWORDS_LOW_DEFAULT","stopwordsHigh","STOPWORDS_HIGH_DEFAULT","maxLinkDensity","MAX_LINK_DENSITY_DEFAULT","maxHeadingDistance","MAX_HEADING_DISTANCE_DEFAULT","noHeadings","NO_HEADINGS_DEFAULT","console","warn","core","_Core2","presenter","_Presenter2","paragrahps","jusText","defaultOuptut","detailOuptut","krdwrdOuptut","Error","Object","defineProperty","value","_Core","_Presenter","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_htmlparser","_htmlparser2","_htmlEntities","_htmlEntities2","_ParagraphMaker","_ParagraphMaker2","_Paragraph","_Paragraph2","Core","cleanHtml","preprocessor","head","footer","script","iframe","style","comment","htmlDocument","htmlToDom","maker","paragraphs","makeParagraphs","classifyParagraphs","reviseParagraphClassification","search","String","indexOf","toLowerCase","stopList","map","item","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","paragraph","text","len","stopwordDesity","linksDesity","heading","isHeading","Number","cfClass","domPath","charsCountInLinks","push","err","_this","reviseParagraphs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","classType","forEach","index","counter","distance","newClassType","prevNeighbour","getPrevNeighbour","nextNeighbour","getNextNeighbour","neighbours","rawHtml","htmlHandler","DefaultHandler","htmlParser","Parser","parseComplete","log","dom","html","replace","htmlDecoding","AllHtmlEntities","str","decode","ignoreNearGood","inc","boundary","checkIndex","getNeighbour","__filename","__dirname","runningInNode","handler","_options","includeLocation","validateHandler","_handler","reset","RssHandler","callback","super_","ignoreWhitespace","verbose","enforceEmptyTags","_callback","inherits","ctor","superCtor","tempCtor","constructor","Tautologistics","NodeHtmlParser","ElementType","Text","Directive","Comment","Script","Style","Tag","_reTrim","_reTrimComment","_reWhitespace","_reTagName","_reAttrib","_reTags","data","parseChunk","_done","handleError","_buffer","parseTags","rawData","element","raw","_parseState","type","name","parseTagName","parseAttribs","_elements","writeHandler","_elementsCurrent","_current","_next","_location","row","col","charOffset","inBuffer","_prevTagSep","_tagStack","parseTagAttribs","elements","idxEnd","idx","tagName","split","attribRaw","substring","match","lastIndex","exec","attribs","toString","bufferEnd","test","tagSep","charAt","elementName","pop","prevElement","rawLen","elementNameCI","location","getLocation","startTag","l","end","chunk","line","writeTag","writeText","writeComment","writeDirective","forceFlush","shift","error","feedRoot","feed","found","DomUtils","getElementsByTagName","children","title","ex","link","description","updated","Date","author","items","list","entry","pubDate","href","_emptyTags","area","base","basefont","br","frame","hr","img","input","isindex","meta","param","embed","reWhitespace","last","handleCallback","handleElement","isEmptyTag","baseName","pos","testElement","getElements","currentElement","recurse","limit","getTest","checkVal","isNaN","parseInt","elementList","Array","concat","getElementById","tag_name","getElementsByTagType","tag_type","XmlEntities","Html4Entities","Html5Entities","ALPHA_INDEX","&lt","&gt","&quot","&apos","&amp","&lt;","&gt;","&quot;","&apos;","&amp;","CHAR_INDEX","60","62","34","39","38","CHAR_S_INDEX","<",">","\"","'","&","encode","s","code","substr","fromCharCode","encodeNonUTF","strLength","charCodeAt","alpha","encodeNonASCII","strLenght","HTML_ALPHA","HTML_CODES","alphaIndex","numIndex","a","entity","chr","cc","createIndexes","charIndex","ENTITIES","_results","charInfo","e","chars","addChar","chr2","_PathInfo","_PathInfo2","PARAGRAPH_TAGS","ParagraphMaker","path","startNewParagraph","containsText","append","tagsCount","content","trim","appendText","hasOwnProperty","startElementNS","parseHtmlDocument","endElementNS","characters","PathInfo","join","getChildren","order","Paragraph","xpath","textNodes","re","stopwords","count","word","wordsCount","stopwordsCount","textLength","_sprintfJs","_sprintfJs2","Presenter","noBoilerPlate","tag","sprintf","cls","window","cache","parse","get_type","variable","slice","str_repeat","multiplier","not_string","number","json","not_json","modulo","placeholder","key_access","index_access","sign","parse_tree","argv","arg","k","pad","pad_character","pad_length","cursor","tree_length","node_type","output","is_positive","JSON","stringify","toExponential","parseFloat","toFixed","toPrecision","toUpperCase","fmt","_fmt","arg_names","SyntaxError","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply"],"mappings":"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","file":"justext.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"justext\"] = factory();\n\telse\n\t\troot[\"justext\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = main;\n\t\n\tvar _Core = __webpack_require__(1);\n\t\n\tvar _Core2 = _interopRequireDefault(_Core);\n\t\n\tvar _Presenter = __webpack_require__(10);\n\t\n\tvar _Presenter2 = _interopRequireDefault(_Presenter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar MAX_LINK_DENSITY_DEFAULT = 0.2;\n\tvar LENGTH_LOW_DEFAULT = 70;\n\tvar LENGTH_HIGH_DEFAULT = 200;\n\tvar STOPWORDS_LOW_DEFAULT = 0.30;\n\tvar STOPWORDS_HIGH_DEFAULT = 0.32;\n\tvar NO_HEADINGS_DEFAULT = false;\n\tvar MAX_HEADING_DISTANCE_DEFAULT = 200;\n\t\n\tfunction main(htmlText) {\n\t  var stoplist = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t  var format = arguments.length <= 2 || arguments[2] === undefined ? 'default' : arguments[2];\n\t  var options = arguments.length <= 3 || arguments[3] === undefined ? {\n\t    lengthLow: LENGTH_LOW_DEFAULT, lengthHigh: LENGTH_HIGH_DEFAULT,\n\t    stopwordsLow: STOPWORDS_LOW_DEFAULT, stopwordsHigh: STOPWORDS_HIGH_DEFAULT,\n\t    maxLinkDensity: MAX_LINK_DENSITY_DEFAULT, maxHeadingDistance: MAX_HEADING_DISTANCE_DEFAULT,\n\t    noHeadings: NO_HEADINGS_DEFAULT\n\t  } : arguments[3];\n\t\n\t  var stopwordsLow = options.stopwordsLow;\n\t  var stopwordsHigh = options.stopwordsHigh;\n\t  if (stoplist.length === 0) {\n\t    // empty stoplist, switch to language-independent mode\n\t    console.warn('No stoplist specified.');\n\t    stopwordsHigh = 0;\n\t    stopwordsLow = 0;\n\t  }\n\t  var core = new _Core2.default();\n\t  var presenter = new _Presenter2.default();\n\t  var paragrahps = core.jusText(htmlText, stoplist, options.lengthLow, options.lengthHigh, stopwordsLow, stopwordsHigh, options.maxLinkDensity, options.maxHeadingDistance, options.noHeadings);\n\t  switch (format) {\n\t    case 'default':\n\t      return presenter.defaultOuptut(paragrahps);\n\t    case 'boilerplate':\n\t      return presenter.defaultOuptut(paragrahps, false);\n\t    case 'detailed':\n\t      return presenter.detailOuptut(paragrahps);\n\t    case 'krdwrd':\n\t      return presenter.krdwrdOuptut(paragrahps);\n\t    default:\n\t      throw new Error('Unknown format');\n\t  }\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _htmlparser = __webpack_require__(2);\n\t\n\tvar _htmlparser2 = _interopRequireDefault(_htmlparser);\n\t\n\tvar _htmlEntities = __webpack_require__(3);\n\t\n\tvar _htmlEntities2 = _interopRequireDefault(_htmlEntities);\n\t\n\tvar _ParagraphMaker = __webpack_require__(7);\n\t\n\tvar _ParagraphMaker2 = _interopRequireDefault(_ParagraphMaker);\n\t\n\tvar _Paragraph = __webpack_require__(9);\n\t\n\tvar _Paragraph2 = _interopRequireDefault(_Paragraph);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Core = function () {\n\t  function Core() {\n\t    _classCallCheck(this, Core);\n\t  }\n\t\n\t  _createClass(Core, [{\n\t    key: 'jusText',\n\t\n\t    /**\n\t     * Converts an HTML page into a list of classified paragraphs. Each paragraph\n\t     * is represented as instance of class ˙˙justext.paragraph.Paragraph˙˙.\n\t     **/\n\t    value: function jusText(htmlText) {\n\t      var stoplist = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t      var lengthLow = arguments[2];\n\t      var lengthHigh = arguments[3];\n\t      var stopwordsLow = arguments[4];\n\t      var stopwordsHigh = arguments[5];\n\t      var maxLinkDensity = arguments[6];\n\t      var maxHeadingDistance = arguments[7];\n\t      var noHeadings = arguments[8];\n\t\n\t      var cleanHtml = this.preprocessor(htmlText, {\n\t        head: true,\n\t        footer: true,\n\t        script: true,\n\t        iframe: true,\n\t        style: true,\n\t        comment: true\n\t      });\n\t      var htmlDocument = this.htmlToDom(cleanHtml);\n\t      var maker = new _ParagraphMaker2.default();\n\t      var paragraphs = maker.makeParagraphs(htmlDocument);\n\t      paragraphs = this.classifyParagraphs(paragraphs, stoplist, lengthLow, lengthHigh, stopwordsLow, stopwordsHigh, maxLinkDensity, noHeadings);\n\t      paragraphs = this.reviseParagraphClassification(paragraphs, maxHeadingDistance);\n\t\n\t      return paragraphs;\n\t    }\n\t\n\t    /**\n\t     * Context-free paragraph classification.\n\t     **/\n\t\n\t  }, {\n\t    key: 'classifyParagraphs',\n\t    value: function classifyParagraphs() {\n\t      var paragraphs = arguments.length <= 0 || arguments[0] === undefined ? [_Paragraph2.default] : arguments[0];\n\t      var stoplist = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t      var lengthLow = arguments[2];\n\t      var lengthHigh = arguments[3];\n\t      var stopwordsLow = arguments[4];\n\t      var stopwordsHigh = arguments[5];\n\t      var maxLinkDensity = arguments[6];\n\t      var maxHeadingDistance = arguments[7];\n\t      var noHeadings = arguments[8];\n\t\n\t      // use cache some string function\n\t      var search = String.prototype.search;\n\t      var indexOf = String.prototype.indexOf;\n\t      var toLowerCase = String.prototype.toLowerCase;\n\t\n\t      var stopList = stoplist.map(function (item) {\n\t        return toLowerCase.call(item);\n\t      });\n\t      var result = [];\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = paragraphs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var paragraph = _step.value;\n\t\n\t          var text = paragraph.text();\n\t          var length = paragraph.len();\n\t          var stopwordDesity = paragraph.stopwordDesity(stopList);\n\t          var linksDesity = paragraph.linksDesity();\n\t          paragraph.heading = !noHeadings && paragraph.isHeading();\n\t\n\t          if (Number(linksDesity) > Number(maxLinkDensity)) {\n\t            paragraph.cfClass = 'bad';\n\t          } else if (indexOf.call(text, '\\xa9') !== -1 || indexOf.call(this, '&copy') !== -1) {\n\t            paragraph.cfClass = 'bad';\n\t          } else if (search.call(paragraph.domPath, '^select|.select') !== -1) {\n\t            paragraph.cfClass = 'bad';\n\t          } else if (length < lengthLow) {\n\t            if (paragraph.charsCountInLinks > 0) {\n\t              paragraph.cfClass = 'bad';\n\t            } else {\n\t              paragraph.cfClass = 'short';\n\t            }\n\t          } else if (Number(stopwordDesity) >= Number(stopwordsHigh)) {\n\t            if (Number(length) > Number(lengthHigh)) {\n\t              paragraph.cfClass = 'good';\n\t            } else {\n\t              paragraph.cfClass = 'neargood';\n\t            }\n\t          } else if (Number(stopwordDesity) >= Number(stopwordsLow)) {\n\t            paragraph.cfClass = 'neargood';\n\t          } else {\n\t            paragraph.cfClass = 'bad';\n\t          }\n\t          result.push(paragraph);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Context-sensitive paragraph classification. Assumes that classify_pragraphs\n\t     * has already been called.\n\t     **/\n\t\n\t  }, {\n\t    key: 'reviseParagraphClassification',\n\t    value: function reviseParagraphClassification() {\n\t      var _this = this;\n\t\n\t      var paragraphs = arguments.length <= 0 || arguments[0] === undefined ? [_Paragraph2.default] : arguments[0];\n\t      var maxHeadingDistance = arguments[1];\n\t\n\t      var reviseParagraphs = [];\n\t      // copy classes\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\t\n\t      try {\n\t        for (var _iterator2 = paragraphs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var paragraph = _step2.value;\n\t\n\t          paragraph.classType = paragraph.cfClass;\n\t          reviseParagraphs.push(paragraph);\n\t        }\n\t\n\t        // good headings\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t\n\t      reviseParagraphs.forEach(function (paragraph, index) {\n\t        if (paragraph.isHeading() && paragraph.classType === 'short') {\n\t          var counter = index + 1;\n\t          var distance = 0;\n\t          while (counter < reviseParagraphs.length && distance <= maxHeadingDistance) {\n\t            if (reviseParagraphs[counter].classType === 'good') {\n\t              reviseParagraphs[counter].classType = 'neargood';\n\t              break;\n\t            }\n\t            distance += reviseParagraphs[counter].text().length;\n\t            counter++;\n\t          }\n\t        }\n\t      });\n\t\n\t      // classify short\n\t      var newClassType = [];\n\t      reviseParagraphs.forEach(function (paragraph, index) {\n\t        if (paragraph.classType === 'short') {\n\t          var prevNeighbour = _this.getPrevNeighbour(index, reviseParagraphs, true);\n\t          var nextNeighbour = _this.getNextNeighbour(index, reviseParagraphs, true);\n\t          var neighbours = [prevNeighbour];\n\t          if (neighbours.indexOf(nextNeighbour) === -1) {\n\t            neighbours.push(nextNeighbour);\n\t          }\n\t\n\t          if (neighbours.length === 1 && neighbours[0] === 'good') {\n\t            newClassType[index] = 'good';\n\t          } else if (neighbours.length === 1 && neighbours[0] === 'bad') {\n\t            newClassType[index] = 'bad';\n\t          } else if (prevNeighbour === 'bad' && _this.getPrevNeighbour(index, reviseParagraphs, false) === 'neargood' || nextNeighbour === 'bad' && _this.getNextNeighbour(index, reviseParagraphs, false) === 'neargood') {\n\t            newClassType[index] = 'good';\n\t          } else {\n\t            newClassType[index] = 'bad';\n\t          }\n\t        }\n\t      });\n\t\n\t      newClassType.forEach(function (classType, index) {\n\t        reviseParagraphs[index].classType = classType;\n\t      });\n\t\n\t      // revise neargood\n\t      reviseParagraphs.forEach(function (paragraph, index) {\n\t        if (paragraph.classType === 'neargood') {\n\t          var prevNeighbour = _this.getPrevNeighbour(index, reviseParagraphs, true);\n\t          var nextNeighbour = _this.getNextNeighbour(index, reviseParagraphs, true);\n\t          if (prevNeighbour === 'bad' && nextNeighbour === 'bad') {\n\t            reviseParagraphs[index].classType = 'bad';\n\t          } else {\n\t            reviseParagraphs[index].classType = 'good';\n\t          }\n\t        }\n\t      });\n\t\n\t      // more good headings\n\t      reviseParagraphs.forEach(function (paragraph, index) {\n\t        if (paragraph.isHeading() && paragraph.classType === 'bad' && paragraph.cfClass !== 'bad') {\n\t          var counter = index + 1;\n\t          var distance = 0;\n\t          while (counter < reviseParagraphs.length && distance <= maxHeadingDistance) {\n\t            if (reviseParagraphs[counter].classType === 'good') {\n\t              reviseParagraphs[counter].classType = 'good';\n\t              break;\n\t            }\n\t            distance += reviseParagraphs[counter].text().length;\n\t            counter++;\n\t          }\n\t        }\n\t      });\n\t      return paragraphs;\n\t    }\n\t\n\t    /**\n\t     * Convert html string to HTML Document\n\t     * rawHtml: string\n\t     **/\n\t\n\t  }, {\n\t    key: 'htmlToDom',\n\t    value: function htmlToDom(rawHtml) {\n\t      // TODO: process encode for html string\n\t      var htmlHandler = new _htmlparser2.default.DefaultHandler();\n\t      var htmlParser = new _htmlparser2.default.Parser(htmlHandler);\n\t      htmlParser.parseComplete(rawHtml);\n\t      console.log('DOM', htmlHandler.dom);\n\t      return htmlHandler.dom;\n\t    }\n\t\n\t    /**\n\t     * Removes unwanted parts of HTML.\n\t     * rawHtml: string\n\t     **/\n\t\n\t  }, {\n\t    key: 'preprocessor',\n\t    value: function preprocessor(rawHtml) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {\n\t        html: false,\n\t        head: false,\n\t        footer: false,\n\t        script: true,\n\t        iframe: true,\n\t        style: true,\n\t        comment: true\n\t      } : arguments[1];\n\t\n\t      // TODO: Process XML format\n\t      // removes script section entirely\n\t      var replace = String.prototype.replace;\n\t      var htmlDecoding = new _htmlEntities2.default.AllHtmlEntities();\n\t      var str = htmlDecoding.decode(rawHtml);\n\t      if (options.script) {\n\t        str = replace.call(str, /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, ' ');\n\t      }\n\t\n\t      // removes iframe section entirely\n\t      if (options.iframe) {\n\t        str = replace.call(str, /<iframe\\b[^<]*(?:(?!<\\/iframe>)<[^<]*)*<\\/iframe>/gi, ' ');\n\t      }\n\t\n\t      // removes head section entirely\n\t      if (options.head) {\n\t        str = replace.call(str, /<head\\b[^<]*(?:(?!<\\/head>)<[^<]*)*<\\/head>/gi, ' ');\n\t      }\n\t\n\t      // removes footer section entirely\n\t      if (options.footer) {\n\t        str = replace.call(str, /<footer\\b[^<]*(?:(?!<\\/footer>)<[^<]*)*<\\/footer>/gi, ' ');\n\t      }\n\t\n\t      // removes style section entirely and inline style\n\t      if (options.style) {\n\t        str = replace.call(str, /<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi, ' ');\n\t        str = replace.call(str, /\\s+style=[\"|'].*?[\"|']/gi, ' ');\n\t        str = replace.call(str, /\\s+class=[\"|'].*?[\"|']/gi, ' ');\n\t      }\n\t\n\t      // remove comment\n\t      if (options.comment) {\n\t        str = replace.call(str, /<!--[^>]*-->/gi, ' ');\n\t      }\n\t\n\t      // remove all remaining tags\n\t      if (options.html) {\n\t        str = replace.call(str, /<\\/?[a-z]+(?:\\s[a-z0-9]+(\\s*=\\s*('.*?'|\".*?\"|\\d+))?)*[\\s\\/]*>/gm, ' ');\n\t      }\n\t\n\t      // replace more than one space with a single space\n\t      str = replace.call(str, /\\s{2,}/g, ' ');\n\t      // remove space between tags\n\t      str = replace.call(str, />\\s</g, '><');\n\t      // remove lead space\n\t      str = replace.call(str, /^\\s+/, '');\n\t      // remove trailing space\n\t      str = replace.call(str, /\\s+$/, '');\n\t      return str;\n\t    }\n\t\n\t    /**\n\t     * Get neighbour class type of paragraphs\n\t     * */\n\t\n\t  }, {\n\t    key: 'getNeighbour',\n\t    value: function getNeighbour(index, paragraphs, ignoreNearGood, inc, boundary) {\n\t      var checkIndex = index;\n\t      while (Number(checkIndex + inc) !== Number(boundary)) {\n\t        checkIndex = Number(checkIndex + inc);\n\t        var classType = paragraphs[checkIndex].classType;\n\t        if (['good', 'bad'].indexOf(classType) !== -1) {\n\t          return classType;\n\t        }\n\t\n\t        if (classType === 'neargood' && !ignoreNearGood) {\n\t          return classType;\n\t        }\n\t      }\n\t\n\t      return 'bad';\n\t    }\n\t\n\t    /**\n\t     * Return the class of the paragraph at the top end of the short/neargood\n\t     * paragraphs block. If ignore_neargood is True, than only 'bad' or 'good'\n\t     * can be returned, otherwise 'neargood' can be returned, too.\n\t     * */\n\t\n\t  }, {\n\t    key: 'getPrevNeighbour',\n\t    value: function getPrevNeighbour(index, paragraphs, ignoreNearGood) {\n\t      return this.getNeighbour(index, paragraphs, ignoreNearGood, -1, -1);\n\t    }\n\t\n\t    /**\n\t     * Return the class of the paragraph at the bottom end of the short/neargood\n\t     * paragraphs block. If ignore_neargood is True, than only 'bad' or 'good'\n\t     * can be returned, otherwise 'neargood' can be returned, too.\n\t     * */\n\t\n\t  }, {\n\t    key: 'getNextNeighbour',\n\t    value: function getNextNeighbour(index, paragraphs, ignoreNearGood) {\n\t      return this.getNeighbour(index, paragraphs, ignoreNearGood, 1, paragraphs.length);\n\t    }\n\t  }]);\n\t\n\t  return Core;\n\t}();\n\t\n\texports.default = Core;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__filename, __dirname) {/***********************************************\n\tCopyright 2010, 2011, Chris Winberry <chris@winberry.net>. All rights reserved.\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to\n\tdeal in the Software without restriction, including without limitation the\n\trights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\tsell copies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\tFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\tIN THE SOFTWARE.\n\t***********************************************/\n\t/* v1.7.6 */\n\t\n\t(function () {\n\t\n\tfunction runningInNode () {\n\t\treturn(\n\t\t\t(\"function\") == \"function\"\n\t\t\t&&\n\t\t\t(typeof exports) == \"object\"\n\t\t\t&&\n\t\t\t(typeof module) == \"object\"\n\t\t\t&&\n\t\t\t(typeof __filename) == \"string\"\n\t\t\t&&\n\t\t\t(typeof __dirname) == \"string\"\n\t\t\t);\n\t}\n\t\n\tif (!runningInNode()) {\n\t\tif (!this.Tautologistics)\n\t\t\tthis.Tautologistics = {};\n\t\telse if (this.Tautologistics.NodeHtmlParser)\n\t\t\treturn; //NodeHtmlParser already defined!\n\t\tthis.Tautologistics.NodeHtmlParser = {};\n\t\texports = this.Tautologistics.NodeHtmlParser;\n\t}\n\t\n\t//Types of elements found in the DOM\n\tvar ElementType = {\n\t\t  Text: \"text\" //Plain text\n\t\t, Directive: \"directive\" //Special tag <!...>\n\t\t, Comment: \"comment\" //Special tag <!--...-->\n\t\t, Script: \"script\" //Special tag <script>...</script>\n\t\t, Style: \"style\" //Special tag <style>...</style>\n\t\t, Tag: \"tag\" //Any tag that isn't special\n\t}\n\t\n\tfunction Parser (handler, options) {\n\t\tthis._options = options ? options : { };\n\t\tif (this._options.includeLocation == undefined) {\n\t\t\tthis._options.includeLocation = false; //Do not track element position in document by default\n\t\t}\n\t\n\t\tthis.validateHandler(handler);\n\t\tthis._handler = handler;\n\t\tthis.reset();\n\t}\n\t\n\t\t//**\"Static\"**//\n\t\t//Regular expressions used for cleaning up and parsing (stateless)\n\t\tParser._reTrim = /(^\\s+|\\s+$)/g; //Trim leading/trailing whitespace\n\t\tParser._reTrimComment = /(^\\!--|--$)/g; //Remove comment tag markup from comment contents\n\t\tParser._reWhitespace = /\\s/g; //Used to find any whitespace to split on\n\t\tParser._reTagName = /^\\s*(\\/?)\\s*([^\\s\\/]+)/; //Used to find the tag name for an element\n\t\n\t\t//Regular expressions used for parsing (stateful)\n\t\tParser._reAttrib = //Find attributes in a tag\n\t\t\t/([^=<>\\\"\\'\\s]+)\\s*=\\s*\"([^\"]*)\"|([^=<>\\\"\\'\\s]+)\\s*=\\s*'([^']*)'|([^=<>\\\"\\'\\s]+)\\s*=\\s*([^'\"\\s]+)|([^=<>\\\"\\'\\s\\/]+)/g;\n\t\tParser._reTags = /[\\<\\>]/g; //Find tag markers\n\t\n\t\t//**Public**//\n\t\t//Methods//\n\t\t//Parses a complete HTML and pushes it to the handler\n\t\tParser.prototype.parseComplete = function Parser$parseComplete (data) {\n\t\t\tthis.reset();\n\t\t\tthis.parseChunk(data);\n\t\t\tthis.done();\n\t\t}\n\t\n\t\t//Parses a piece of an HTML document\n\t\tParser.prototype.parseChunk = function Parser$parseChunk (data) {\n\t\t\tif (this._done)\n\t\t\t\tthis.handleError(new Error(\"Attempted to parse chunk after parsing already done\"));\n\t\t\tthis._buffer += data; //FIXME: this can be a bottleneck\n\t\t\tthis.parseTags();\n\t\t}\n\t\n\t\t//Tells the parser that the HTML being parsed is complete\n\t\tParser.prototype.done = function Parser$done () {\n\t\t\tif (this._done)\n\t\t\t\treturn;\n\t\t\tthis._done = true;\n\t\t\n\t\t\t//Push any unparsed text into a final element in the element list\n\t\t\tif (this._buffer.length) {\n\t\t\t\tvar rawData = this._buffer;\n\t\t\t\tthis._buffer = \"\";\n\t\t\t\tvar element = {\n\t\t\t\t\t  raw: rawData\n\t\t\t\t\t, data: (this._parseState == ElementType.Text) ? rawData : rawData.replace(Parser._reTrim, \"\")\n\t\t\t\t\t, type: this._parseState\n\t\t\t\t\t};\n\t\t\t\tif (this._parseState == ElementType.Tag || this._parseState == ElementType.Script || this._parseState == ElementType.Style)\n\t\t\t\t\telement.name = this.parseTagName(element.data);\n\t\t\t\tthis.parseAttribs(element);\n\t\t\t\tthis._elements.push(element);\n\t\t\t}\n\t\t\n\t\t\tthis.writeHandler();\n\t\t\tthis._handler.done();\n\t\t}\n\t\n\t\t//Resets the parser to a blank state, ready to parse a new HTML document\n\t\tParser.prototype.reset = function Parser$reset () {\n\t\t\tthis._buffer = \"\";\n\t\t\tthis._done = false;\n\t\t\tthis._elements = [];\n\t\t\tthis._elementsCurrent = 0;\n\t\t\tthis._current = 0;\n\t\t\tthis._next = 0;\n\t\t\tthis._location = {\n\t\t\t\t  row: 0\n\t\t\t\t, col: 0\n\t\t\t\t, charOffset: 0\n\t\t\t\t, inBuffer: 0\n\t\t\t};\n\t\t\tthis._parseState = ElementType.Text;\n\t\t\tthis._prevTagSep = '';\n\t\t\tthis._tagStack = [];\n\t\t\tthis._handler.reset();\n\t\t}\n\t\t\n\t\t//**Private**//\n\t\t//Properties//\n\t\tParser.prototype._options = null; //Parser options for how to behave\n\t\tParser.prototype._handler = null; //Handler for parsed elements\n\t\tParser.prototype._buffer = null; //Buffer of unparsed data\n\t\tParser.prototype._done = false; //Flag indicating whether parsing is done\n\t\tParser.prototype._elements =  null; //Array of parsed elements\n\t\tParser.prototype._elementsCurrent = 0; //Pointer to last element in _elements that has been processed\n\t\tParser.prototype._current = 0; //Position in data that has already been parsed\n\t\tParser.prototype._next = 0; //Position in data of the next tag marker (<>)\n\t\tParser.prototype._location = null; //Position tracking for elements in a stream\n\t\tParser.prototype._parseState = ElementType.Text; //Current type of element being parsed\n\t\tParser.prototype._prevTagSep = ''; //Previous tag marker found\n\t\t//Stack of element types previously encountered; keeps track of when\n\t\t//parsing occurs inside a script/comment/style tag\n\t\tParser.prototype._tagStack = null;\n\t\n\t\t//Methods//\n\t\t//Takes an array of elements and parses any found attributes\n\t\tParser.prototype.parseTagAttribs = function Parser$parseTagAttribs (elements) {\n\t\t\tvar idxEnd = elements.length;\n\t\t\tvar idx = 0;\n\t\t\n\t\t\twhile (idx < idxEnd) {\n\t\t\t\tvar element = elements[idx++];\n\t\t\t\tif (element.type == ElementType.Tag || element.type == ElementType.Script || element.type == ElementType.style)\n\t\t\t\t\tthis.parseAttribs(element);\n\t\t\t}\n\t\t\n\t\t\treturn(elements);\n\t\t}\n\t\n\t\t//Takes an element and adds an \"attribs\" property for any element attributes found \n\t\tParser.prototype.parseAttribs = function Parser$parseAttribs (element) {\n\t\t\t//Only parse attributes for tags\n\t\t\tif (element.type != ElementType.Script && element.type != ElementType.Style && element.type != ElementType.Tag)\n\t\t\t\treturn;\n\t\t\n\t\t\tvar tagName = element.data.split(Parser._reWhitespace, 1)[0];\n\t\t\tvar attribRaw = element.data.substring(tagName.length);\n\t\t\tif (attribRaw.length < 1)\n\t\t\t\treturn;\n\t\t\n\t\t\tvar match;\n\t\t\tParser._reAttrib.lastIndex = 0;\n\t\t\twhile (match = Parser._reAttrib.exec(attribRaw)) {\n\t\t\t\tif (element.attribs == undefined)\n\t\t\t\t\telement.attribs = {};\n\t\t\n\t\t\t\tif (typeof match[1] == \"string\" && match[1].length) {\n\t\t\t\t\telement.attribs[match[1]] = match[2];\n\t\t\t\t} else if (typeof match[3] == \"string\" && match[3].length) {\n\t\t\t\t\telement.attribs[match[3].toString()] = match[4].toString();\n\t\t\t\t} else if (typeof match[5] == \"string\" && match[5].length) {\n\t\t\t\t\telement.attribs[match[5]] = match[6];\n\t\t\t\t} else if (typeof match[7] == \"string\" && match[7].length) {\n\t\t\t\t\telement.attribs[match[7]] = match[7];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t//Extracts the base tag name from the data value of an element\n\t\tParser.prototype.parseTagName = function Parser$parseTagName (data) {\n\t\t\tif (data == null || data == \"\")\n\t\t\t\treturn(\"\");\n\t\t\tvar match = Parser._reTagName.exec(data);\n\t\t\tif (!match)\n\t\t\t\treturn(\"\");\n\t\t\treturn((match[1] ? \"/\" : \"\") + match[2]);\n\t\t}\n\t\n\t\t//Parses through HTML text and returns an array of found elements\n\t\t//I admit, this function is rather large but splitting up had an noticeable impact on speed\n\t\tParser.prototype.parseTags = function Parser$parseTags () {\n\t\t\tvar bufferEnd = this._buffer.length - 1;\n\t\t\twhile (Parser._reTags.test(this._buffer)) {\n\t\t\t\tthis._next = Parser._reTags.lastIndex - 1;\n\t\t\t\tvar tagSep = this._buffer.charAt(this._next); //The currently found tag marker\n\t\t\t\tvar rawData = this._buffer.substring(this._current, this._next); //The next chunk of data to parse\n\t\t\n\t\t\t\t//A new element to eventually be appended to the element list\n\t\t\t\tvar element = {\n\t\t\t\t\t  raw: rawData\n\t\t\t\t\t, data: (this._parseState == ElementType.Text) ? rawData : rawData.replace(Parser._reTrim, \"\")\n\t\t\t\t\t, type: this._parseState\n\t\t\t\t};\n\t\t\n\t\t\t\tvar elementName = this.parseTagName(element.data);\n\t\t\n\t\t\t\t//This section inspects the current tag stack and modifies the current\n\t\t\t\t//element if we're actually parsing a special area (script/comment/style tag)\n\t\t\t\tif (this._tagStack.length) { //We're parsing inside a script/comment/style tag\n\t\t\t\t\tif (this._tagStack[this._tagStack.length - 1] == ElementType.Script) { //We're currently in a script tag\n\t\t\t\t\t\tif (elementName.toLowerCase() == \"/script\") //Actually, we're no longer in a script tag, so pop it off the stack\n\t\t\t\t\t\t\tthis._tagStack.pop();\n\t\t\t\t\t\telse { //Not a closing script tag\n\t\t\t\t\t\t\tif (element.raw.indexOf(\"!--\") != 0) { //Make sure we're not in a comment\n\t\t\t\t\t\t\t\t//All data from here to script close is now a text element\n\t\t\t\t\t\t\t\telement.type = ElementType.Text;\n\t\t\t\t\t\t\t\t//If the previous element is text, append the current text to it\n\t\t\t\t\t\t\t\tif (this._elements.length && this._elements[this._elements.length - 1].type == ElementType.Text) {\n\t\t\t\t\t\t\t\t\tvar prevElement = this._elements[this._elements.length - 1];\n\t\t\t\t\t\t\t\t\tprevElement.raw = prevElement.data = prevElement.raw + this._prevTagSep + element.raw;\n\t\t\t\t\t\t\t\t\telement.raw = element.data = \"\"; //This causes the current element to not be added to the element list\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (this._tagStack[this._tagStack.length - 1] == ElementType.Style) { //We're currently in a style tag\n\t\t\t\t\t\tif (elementName.toLowerCase() == \"/style\") //Actually, we're no longer in a style tag, so pop it off the stack\n\t\t\t\t\t\t\tthis._tagStack.pop();\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (element.raw.indexOf(\"!--\") != 0) { //Make sure we're not in a comment\n\t\t\t\t\t\t\t\t//All data from here to style close is now a text element\n\t\t\t\t\t\t\t\telement.type = ElementType.Text;\n\t\t\t\t\t\t\t\t//If the previous element is text, append the current text to it\n\t\t\t\t\t\t\t\tif (this._elements.length && this._elements[this._elements.length - 1].type == ElementType.Text) {\n\t\t\t\t\t\t\t\t\tvar prevElement = this._elements[this._elements.length - 1];\n\t\t\t\t\t\t\t\t\tif (element.raw != \"\") {\n\t\t\t\t\t\t\t\t\t\tprevElement.raw = prevElement.data = prevElement.raw + this._prevTagSep + element.raw;\n\t\t\t\t\t\t\t\t\t\telement.raw = element.data = \"\"; //This causes the current element to not be added to the element list\n\t\t\t\t\t\t\t\t\t} else { //Element is empty, so just append the last tag marker found\n\t\t\t\t\t\t\t\t\t\tprevElement.raw = prevElement.data = prevElement.raw + this._prevTagSep;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else { //The previous element was not text\n\t\t\t\t\t\t\t\t\tif (element.raw != \"\") {\n\t\t\t\t\t\t\t\t\t\telement.raw = element.data = element.raw;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (this._tagStack[this._tagStack.length - 1] == ElementType.Comment) { //We're currently in a comment tag\n\t\t\t\t\t\tvar rawLen = element.raw.length;\n\t\t\t\t\t\tif (element.raw.charAt(rawLen - 2) == \"-\" && element.raw.charAt(rawLen - 1) == \"-\" && tagSep == \">\") {\n\t\t\t\t\t\t\t//Actually, we're no longer in a style tag, so pop it off the stack\n\t\t\t\t\t\t\tthis._tagStack.pop();\n\t\t\t\t\t\t\t//If the previous element is a comment, append the current text to it\n\t\t\t\t\t\t\tif (this._elements.length && this._elements[this._elements.length - 1].type == ElementType.Comment) {\n\t\t\t\t\t\t\t\tvar prevElement = this._elements[this._elements.length - 1];\n\t\t\t\t\t\t\t\tprevElement.raw = prevElement.data = (prevElement.raw + element.raw).replace(Parser._reTrimComment, \"\");\n\t\t\t\t\t\t\t\telement.raw = element.data = \"\"; //This causes the current element to not be added to the element list\n\t\t\t\t\t\t\t\telement.type = ElementType.Text;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse //Previous element not a comment\n\t\t\t\t\t\t\t\telement.type = ElementType.Comment; //Change the current element's type to a comment\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { //Still in a comment tag\n\t\t\t\t\t\t\telement.type = ElementType.Comment;\n\t\t\t\t\t\t\t//If the previous element is a comment, append the current text to it\n\t\t\t\t\t\t\tif (this._elements.length && this._elements[this._elements.length - 1].type == ElementType.Comment) {\n\t\t\t\t\t\t\t\tvar prevElement = this._elements[this._elements.length - 1];\n\t\t\t\t\t\t\t\tprevElement.raw = prevElement.data = prevElement.raw + element.raw + tagSep;\n\t\t\t\t\t\t\t\telement.raw = element.data = \"\"; //This causes the current element to not be added to the element list\n\t\t\t\t\t\t\t\telement.type = ElementType.Text;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\telement.raw = element.data = element.raw + tagSep;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t//Processing of non-special tags\n\t\t\t\tif (element.type == ElementType.Tag) {\n\t\t\t\t\telement.name = elementName;\n\t\t\t\t\tvar elementNameCI = elementName.toLowerCase();\n\t\t\t\t\t\n\t\t\t\t\tif (element.raw.indexOf(\"!--\") == 0) { //This tag is really comment\n\t\t\t\t\t\telement.type = ElementType.Comment;\n\t\t\t\t\t\tdelete element[\"name\"];\n\t\t\t\t\t\tvar rawLen = element.raw.length;\n\t\t\t\t\t\t//Check if the comment is terminated in the current element\n\t\t\t\t\t\tif (element.raw.charAt(rawLen - 1) == \"-\" && element.raw.charAt(rawLen - 2) == \"-\" && tagSep == \">\")\n\t\t\t\t\t\t\telement.raw = element.data = element.raw.replace(Parser._reTrimComment, \"\");\n\t\t\t\t\t\telse { //It's not so push the comment onto the tag stack\n\t\t\t\t\t\t\telement.raw += tagSep;\n\t\t\t\t\t\t\tthis._tagStack.push(ElementType.Comment);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (element.raw.indexOf(\"!\") == 0 || element.raw.indexOf(\"?\") == 0) {\n\t\t\t\t\t\telement.type = ElementType.Directive;\n\t\t\t\t\t\t//TODO: what about CDATA?\n\t\t\t\t\t}\n\t\t\t\t\telse if (elementNameCI == \"script\") {\n\t\t\t\t\t\telement.type = ElementType.Script;\n\t\t\t\t\t\t//Special tag, push onto the tag stack if not terminated\n\t\t\t\t\t\tif (element.data.charAt(element.data.length - 1) != \"/\")\n\t\t\t\t\t\t\tthis._tagStack.push(ElementType.Script);\n\t\t\t\t\t}\n\t\t\t\t\telse if (elementNameCI == \"/script\")\n\t\t\t\t\t\telement.type = ElementType.Script;\n\t\t\t\t\telse if (elementNameCI == \"style\") {\n\t\t\t\t\t\telement.type = ElementType.Style;\n\t\t\t\t\t\t//Special tag, push onto the tag stack if not terminated\n\t\t\t\t\t\tif (element.data.charAt(element.data.length - 1) != \"/\")\n\t\t\t\t\t\t\tthis._tagStack.push(ElementType.Style);\n\t\t\t\t\t}\n\t\t\t\t\telse if (elementNameCI == \"/style\")\n\t\t\t\t\t\telement.type = ElementType.Style;\n\t\t\t\t\tif (element.name && element.name.charAt(0) == \"/\")\n\t\t\t\t\t\telement.data = element.name;\n\t\t\t\t}\n\t\t\n\t\t\t\t//Add all tags and non-empty text elements to the element list\n\t\t\t\tif (element.raw != \"\" || element.type != ElementType.Text) {\n\t\t\t\t\tif (this._options.includeLocation && !element.location) {\n\t\t\t\t\t\telement.location = this.getLocation(element.type == ElementType.Tag);\n\t\t\t\t\t}\n\t\t\t\t\tthis.parseAttribs(element);\n\t\t\t\t\tthis._elements.push(element);\n\t\t\t\t\t//If tag self-terminates, add an explicit, separate closing tag\n\t\t\t\t\tif (\n\t\t\t\t\t\telement.type != ElementType.Text\n\t\t\t\t\t\t&&\n\t\t\t\t\t\telement.type != ElementType.Comment\n\t\t\t\t\t\t&&\n\t\t\t\t\t\telement.type != ElementType.Directive\n\t\t\t\t\t\t&&\n\t\t\t\t\t\telement.data.charAt(element.data.length - 1) == \"/\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\tthis._elements.push({\n\t\t\t\t\t\t\t  raw: \"/\" + element.name\n\t\t\t\t\t\t\t, data: \"/\" + element.name\n\t\t\t\t\t\t\t, name: \"/\" + element.name\n\t\t\t\t\t\t\t, type: element.type\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._parseState = (tagSep == \"<\") ? ElementType.Tag : ElementType.Text;\n\t\t\t\tthis._current = this._next + 1;\n\t\t\t\tthis._prevTagSep = tagSep;\n\t\t\t}\n\t\n\t\t\tif (this._options.includeLocation) {\n\t\t\t\tthis.getLocation();\n\t\t\t\tthis._location.row += this._location.inBuffer;\n\t\t\t\tthis._location.inBuffer = 0;\n\t\t\t\tthis._location.charOffset = 0;\n\t\t\t}\n\t\t\tthis._buffer = (this._current <= bufferEnd) ? this._buffer.substring(this._current) : \"\";\n\t\t\tthis._current = 0;\n\t\t\n\t\t\tthis.writeHandler();\n\t\t}\n\t\n\t\tParser.prototype.getLocation = function Parser$getLocation (startTag) {\n\t\t\tvar c,\n\t\t\t\tl = this._location,\n\t\t\t\tend = this._current - (startTag ? 1 : 0),\n\t\t\t\tchunk = startTag && l.charOffset == 0 && this._current == 0;\n\t\t\t\n\t\t\tfor (; l.charOffset < end; l.charOffset++) {\n\t\t\t\tc = this._buffer.charAt(l.charOffset);\n\t\t\t\tif (c == '\\n') {\n\t\t\t\t\tl.inBuffer++;\n\t\t\t\t\tl.col = 0;\n\t\t\t\t} else if (c != '\\r') {\n\t\t\t\t\tl.col++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t  line: l.row + l.inBuffer + 1\n\t\t\t\t, col: l.col + (chunk ? 0: 1)\n\t\t\t};\n\t\t}\n\t\n\t\t//Checks the handler to make it is an object with the right \"interface\"\n\t\tParser.prototype.validateHandler = function Parser$validateHandler (handler) {\n\t\t\tif ((typeof handler) != \"object\")\n\t\t\t\tthrow new Error(\"Handler is not an object\");\n\t\t\tif ((typeof handler.reset) != \"function\")\n\t\t\t\tthrow new Error(\"Handler method 'reset' is invalid\");\n\t\t\tif ((typeof handler.done) != \"function\")\n\t\t\t\tthrow new Error(\"Handler method 'done' is invalid\");\n\t\t\tif ((typeof handler.writeTag) != \"function\")\n\t\t\t\tthrow new Error(\"Handler method 'writeTag' is invalid\");\n\t\t\tif ((typeof handler.writeText) != \"function\")\n\t\t\t\tthrow new Error(\"Handler method 'writeText' is invalid\");\n\t\t\tif ((typeof handler.writeComment) != \"function\")\n\t\t\t\tthrow new Error(\"Handler method 'writeComment' is invalid\");\n\t\t\tif ((typeof handler.writeDirective) != \"function\")\n\t\t\t\tthrow new Error(\"Handler method 'writeDirective' is invalid\");\n\t\t}\n\t\n\t\t//Writes parsed elements out to the handler\n\t\tParser.prototype.writeHandler = function Parser$writeHandler (forceFlush) {\n\t\t\tforceFlush = !!forceFlush;\n\t\t\tif (this._tagStack.length && !forceFlush)\n\t\t\t\treturn;\n\t\t\twhile (this._elements.length) {\n\t\t\t\tvar element = this._elements.shift();\n\t\t\t\tswitch (element.type) {\n\t\t\t\t\tcase ElementType.Comment:\n\t\t\t\t\t\tthis._handler.writeComment(element);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ElementType.Directive:\n\t\t\t\t\t\tthis._handler.writeDirective(element);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ElementType.Text:\n\t\t\t\t\t\tthis._handler.writeText(element);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis._handler.writeTag(element);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tParser.prototype.handleError = function Parser$handleError (error) {\n\t\t\tif ((typeof this._handler.error) == \"function\")\n\t\t\t\tthis._handler.error(error);\n\t\t\telse\n\t\t\t\tthrow error;\n\t\t}\n\t\n\t//TODO: make this a trully streamable handler\n\tfunction RssHandler (callback) {\n\t\tRssHandler.super_.call(this, callback, { ignoreWhitespace: true, verbose: false, enforceEmptyTags: false });\n\t}\n\tinherits(RssHandler, DefaultHandler);\n\t\n\t\tRssHandler.prototype.done = function RssHandler$done () {\n\t\t\tvar feed = { };\n\t\t\tvar feedRoot;\n\t\n\t\t\tvar found = DomUtils.getElementsByTagName(function (value) { return(value == \"rss\" || value == \"feed\"); }, this.dom, false);\n\t\t\tif (found.length) {\n\t\t\t\tfeedRoot = found[0];\n\t\t\t}\n\t\t\tif (feedRoot) {\n\t\t\t\tif (feedRoot.name == \"rss\") {\n\t\t\t\t\tfeed.type = \"rss\";\n\t\t\t\t\tfeedRoot = feedRoot.children[0]; //<channel/>\n\t\t\t\t\tfeed.id = \"\";\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.title = DomUtils.getElementsByTagName(\"title\", feedRoot.children, false)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.link = DomUtils.getElementsByTagName(\"link\", feedRoot.children, false)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.description = DomUtils.getElementsByTagName(\"description\", feedRoot.children, false)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.updated = new Date(DomUtils.getElementsByTagName(\"lastBuildDate\", feedRoot.children, false)[0].children[0].data);\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.author = DomUtils.getElementsByTagName(\"managingEditor\", feedRoot.children, false)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\tfeed.items = [];\n\t\t\t\t\tDomUtils.getElementsByTagName(\"item\", feedRoot.children).forEach(function (item, index, list) {\n\t\t\t\t\t\tvar entry = {};\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.id = DomUtils.getElementsByTagName(\"guid\", item.children, false)[0].children[0].data;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.title = DomUtils.getElementsByTagName(\"title\", item.children, false)[0].children[0].data;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.link = DomUtils.getElementsByTagName(\"link\", item.children, false)[0].children[0].data;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.description = DomUtils.getElementsByTagName(\"description\", item.children, false)[0].children[0].data;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.pubDate = new Date(DomUtils.getElementsByTagName(\"pubDate\", item.children, false)[0].children[0].data);\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\tfeed.items.push(entry);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfeed.type = \"atom\";\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.id = DomUtils.getElementsByTagName(\"id\", feedRoot.children, false)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.title = DomUtils.getElementsByTagName(\"title\", feedRoot.children, false)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.link = DomUtils.getElementsByTagName(\"link\", feedRoot.children, false)[0].attribs.href;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.description = DomUtils.getElementsByTagName(\"subtitle\", feedRoot.children, false)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.updated = new Date(DomUtils.getElementsByTagName(\"updated\", feedRoot.children, false)[0].children[0].data);\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfeed.author = DomUtils.getElementsByTagName(\"email\", feedRoot.children, true)[0].children[0].data;\n\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\tfeed.items = [];\n\t\t\t\t\tDomUtils.getElementsByTagName(\"entry\", feedRoot.children).forEach(function (item, index, list) {\n\t\t\t\t\t\tvar entry = {};\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.id = DomUtils.getElementsByTagName(\"id\", item.children, false)[0].children[0].data;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.title = DomUtils.getElementsByTagName(\"title\", item.children, false)[0].children[0].data;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.link = DomUtils.getElementsByTagName(\"link\", item.children, false)[0].attribs.href;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.description = DomUtils.getElementsByTagName(\"summary\", item.children, false)[0].children[0].data;\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tentry.pubDate = new Date(DomUtils.getElementsByTagName(\"updated\", item.children, false)[0].children[0].data);\n\t\t\t\t\t\t} catch (ex) { }\n\t\t\t\t\t\tfeed.items.push(entry);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tthis.dom = feed;\n\t\t\t}\n\t\t\tRssHandler.super_.prototype.done.call(this);\n\t\t}\n\t\n\t///////////////////////////////////////////////////\n\t\n\tfunction DefaultHandler (callback, options) {\n\t\tthis.reset();\n\t\tthis._options = options ? options : { };\n\t\tif (this._options.ignoreWhitespace == undefined)\n\t\t\tthis._options.ignoreWhitespace = false; //Keep whitespace-only text nodes\n\t\tif (this._options.verbose == undefined)\n\t\t\tthis._options.verbose = true; //Keep data property for tags and raw property for all\n\t\tif (this._options.enforceEmptyTags == undefined)\n\t\t\tthis._options.enforceEmptyTags = true; //Don't allow children for HTML tags defined as empty in spec\n\t\tif ((typeof callback) == \"function\")\n\t\t\tthis._callback = callback;\n\t}\n\t\n\t\t//**\"Static\"**//\n\t\t//HTML Tags that shouldn't contain child nodes\n\t\tDefaultHandler._emptyTags = {\n\t\t\t  area: 1\n\t\t\t, base: 1\n\t\t\t, basefont: 1\n\t\t\t, br: 1\n\t\t\t, col: 1\n\t\t\t, frame: 1\n\t\t\t, hr: 1\n\t\t\t, img: 1\n\t\t\t, input: 1\n\t\t\t, isindex: 1\n\t\t\t, link: 1\n\t\t\t, meta: 1\n\t\t\t, param: 1\n\t\t\t, embed: 1\n\t\t}\n\t\t//Regex to detect whitespace only text nodes\n\t\tDefaultHandler.reWhitespace = /^\\s*$/;\n\t\n\t\t//**Public**//\n\t\t//Properties//\n\t\tDefaultHandler.prototype.dom = null; //The hierarchical object containing the parsed HTML\n\t\t//Methods//\n\t\t//Resets the handler back to starting state\n\t\tDefaultHandler.prototype.reset = function DefaultHandler$reset() {\n\t\t\tthis.dom = [];\n\t\t\tthis._done = false;\n\t\t\tthis._tagStack = [];\n\t\t\tthis._tagStack.last = function DefaultHandler$_tagStack$last () {\n\t\t\t\treturn(this.length ? this[this.length - 1] : null);\n\t\t\t}\n\t\t}\n\t\t//Signals the handler that parsing is done\n\t\tDefaultHandler.prototype.done = function DefaultHandler$done () {\n\t\t\tthis._done = true;\n\t\t\tthis.handleCallback(null);\n\t\t}\n\t\tDefaultHandler.prototype.writeTag = function DefaultHandler$writeTag (element) {\n\t\t\tthis.handleElement(element);\n\t\t} \n\t\tDefaultHandler.prototype.writeText = function DefaultHandler$writeText (element) {\n\t\t\tif (this._options.ignoreWhitespace)\n\t\t\t\tif (DefaultHandler.reWhitespace.test(element.data))\n\t\t\t\t\treturn;\n\t\t\tthis.handleElement(element);\n\t\t} \n\t\tDefaultHandler.prototype.writeComment = function DefaultHandler$writeComment (element) {\n\t\t\tthis.handleElement(element);\n\t\t} \n\t\tDefaultHandler.prototype.writeDirective = function DefaultHandler$writeDirective (element) {\n\t\t\tthis.handleElement(element);\n\t\t}\n\t\tDefaultHandler.prototype.error = function DefaultHandler$error (error) {\n\t\t\tthis.handleCallback(error);\n\t\t}\n\t\n\t\t//**Private**//\n\t\t//Properties//\n\t\tDefaultHandler.prototype._options = null; //Handler options for how to behave\n\t\tDefaultHandler.prototype._callback = null; //Callback to respond to when parsing done\n\t\tDefaultHandler.prototype._done = false; //Flag indicating whether handler has been notified of parsing completed\n\t\tDefaultHandler.prototype._tagStack = null; //List of parents to the currently element being processed\n\t\t//Methods//\n\t\tDefaultHandler.prototype.handleCallback = function DefaultHandler$handleCallback (error) {\n\t\t\t\tif ((typeof this._callback) != \"function\")\n\t\t\t\t\tif (error)\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\telse\n\t\t\t\t\t\treturn;\n\t\t\t\tthis._callback(error, this.dom);\n\t\t}\n\t\t\n\t\tDefaultHandler.prototype.isEmptyTag = function(element) {\n\t\t\tvar name = element.name.toLowerCase();\n\t\t\tif (name.charAt(0) == '/') {\n\t\t\t\tname = name.substring(1);\n\t\t\t}\n\t\t\treturn this._options.enforceEmptyTags && !!DefaultHandler._emptyTags[name];\n\t\t};\n\t\t\n\t\tDefaultHandler.prototype.handleElement = function DefaultHandler$handleElement (element) {\n\t\t\tif (this._done)\n\t\t\t\tthis.handleCallback(new Error(\"Writing to the handler after done() called is not allowed without a reset()\"));\n\t\t\tif (!this._options.verbose) {\n\t//\t\t\telement.raw = null; //FIXME: Not clean\n\t\t\t\t//FIXME: Serious performance problem using delete\n\t\t\t\tdelete element.raw;\n\t\t\t\tif (element.type == \"tag\" || element.type == \"script\" || element.type == \"style\")\n\t\t\t\t\tdelete element.data;\n\t\t\t}\n\t\t\tif (!this._tagStack.last()) { //There are no parent elements\n\t\t\t\t//If the element can be a container, add it to the tag stack and the top level list\n\t\t\t\tif (element.type != ElementType.Text && element.type != ElementType.Comment && element.type != ElementType.Directive) {\n\t\t\t\t\tif (element.name.charAt(0) != \"/\") { //Ignore closing tags that obviously don't have an opening tag\n\t\t\t\t\t\tthis.dom.push(element);\n\t\t\t\t\t\tif (!this.isEmptyTag(element)) { //Don't add tags to the tag stack that can't have children\n\t\t\t\t\t\t\tthis._tagStack.push(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse //Otherwise just add to the top level list\n\t\t\t\t\tthis.dom.push(element);\n\t\t\t}\n\t\t\telse { //There are parent elements\n\t\t\t\t//If the element can be a container, add it as a child of the element\n\t\t\t\t//on top of the tag stack and then add it to the tag stack\n\t\t\t\tif (element.type != ElementType.Text && element.type != ElementType.Comment && element.type != ElementType.Directive) {\n\t\t\t\t\tif (element.name.charAt(0) == \"/\") {\n\t\t\t\t\t\t//This is a closing tag, scan the tagStack to find the matching opening tag\n\t\t\t\t\t\t//and pop the stack up to the opening tag's parent\n\t\t\t\t\t\tvar baseName = element.name.substring(1);\n\t\t\t\t\t\tif (!this.isEmptyTag(element)) {\n\t\t\t\t\t\t\tvar pos = this._tagStack.length - 1;\n\t\t\t\t\t\t\twhile (pos > -1 && this._tagStack[pos--].name != baseName) { }\n\t\t\t\t\t\t\tif (pos > -1 || this._tagStack[0].name == baseName)\n\t\t\t\t\t\t\t\twhile (pos < this._tagStack.length - 1)\n\t\t\t\t\t\t\t\t\tthis._tagStack.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse { //This is not a closing tag\n\t\t\t\t\t\tif (!this._tagStack.last().children)\n\t\t\t\t\t\t\tthis._tagStack.last().children = [];\n\t\t\t\t\t\tthis._tagStack.last().children.push(element);\n\t\t\t\t\t\tif (!this.isEmptyTag(element)) //Don't add tags to the tag stack that can't have children\n\t\t\t\t\t\t\tthis._tagStack.push(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse { //This is not a container element\n\t\t\t\t\tif (!this._tagStack.last().children)\n\t\t\t\t\t\tthis._tagStack.last().children = [];\n\t\t\t\t\tthis._tagStack.last().children.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tvar DomUtils = {\n\t\t\t  testElement: function DomUtils$testElement (options, element) {\n\t\t\t\tif (!element) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\tfor (var key in options) {\n\t\t\t\t\tif (key == \"tag_name\") {\n\t\t\t\t\t\tif (element.type != \"tag\" && element.type != \"script\" && element.type != \"style\") {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!options[\"tag_name\"](element.name)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (key == \"tag_type\") {\n\t\t\t\t\t\tif (!options[\"tag_type\"](element.type)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (key == \"tag_contains\") {\n\t\t\t\t\t\tif (element.type != \"text\" && element.type != \"comment\" && element.type != \"directive\") {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!options[\"tag_contains\"](element.data)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!element.attribs || !options[key](element.attribs[key])) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\n\t\t\t, getElements: function DomUtils$getElements (options, currentElement, recurse, limit) {\n\t\t\t\trecurse = (recurse === undefined || recurse === null) || !!recurse;\n\t\t\t\tlimit = isNaN(parseInt(limit)) ? -1 : parseInt(limit);\n\t\n\t\t\t\tif (!currentElement) {\n\t\t\t\t\treturn([]);\n\t\t\t\t}\n\t\t\n\t\t\t\tvar found = [];\n\t\t\t\tvar elementList;\n\t\n\t\t\t\tfunction getTest (checkVal) {\n\t\t\t\t\treturn(function (value) { return(value == checkVal); });\n\t\t\t\t}\n\t\t\t\tfor (var key in options) {\n\t\t\t\t\tif ((typeof options[key]) != \"function\") {\n\t\t\t\t\t\toptions[key] = getTest(options[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (DomUtils.testElement(options, currentElement)) {\n\t\t\t\t\tfound.push(currentElement);\n\t\t\t\t}\n\t\n\t\t\t\tif (limit >= 0 && found.length >= limit) {\n\t\t\t\t\treturn(found);\n\t\t\t\t}\n\t\n\t\t\t\tif (recurse && currentElement.children) {\n\t\t\t\t\telementList = currentElement.children;\n\t\t\t\t} else if (currentElement instanceof Array) {\n\t\t\t\t\telementList = currentElement;\n\t\t\t\t} else {\n\t\t\t\t\treturn(found);\n\t\t\t\t}\n\t\t\n\t\t\t\tfor (var i = 0; i < elementList.length; i++) {\n\t\t\t\t\tfound = found.concat(DomUtils.getElements(options, elementList[i], recurse, limit));\n\t\t\t\t\tif (limit >= 0 && found.length >= limit) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn(found);\n\t\t\t}\n\t\t\t\n\t\t\t, getElementById: function DomUtils$getElementById (id, currentElement, recurse) {\n\t\t\t\tvar result = DomUtils.getElements({ id: id }, currentElement, recurse, 1);\n\t\t\t\treturn(result.length ? result[0] : null);\n\t\t\t}\n\t\t\t\n\t\t\t, getElementsByTagName: function DomUtils$getElementsByTagName (name, currentElement, recurse, limit) {\n\t\t\t\treturn(DomUtils.getElements({ tag_name: name }, currentElement, recurse, limit));\n\t\t\t}\n\t\t\t\n\t\t\t, getElementsByTagType: function DomUtils$getElementsByTagType (type, currentElement, recurse, limit) {\n\t\t\t\treturn(DomUtils.getElements({ tag_type: type }, currentElement, recurse, limit));\n\t\t\t}\n\t\t}\n\t\n\t\tfunction inherits (ctor, superCtor) {\n\t\t\tvar tempCtor = function(){};\n\t\t\ttempCtor.prototype = superCtor.prototype;\n\t\t\tctor.super_ = superCtor;\n\t\t\tctor.prototype = new tempCtor();\n\t\t\tctor.prototype.constructor = ctor;\n\t\t}\n\t\n\texports.Parser = Parser;\n\t\n\texports.DefaultHandler = DefaultHandler;\n\t\n\texports.RssHandler = RssHandler;\n\t\n\texports.ElementType = ElementType;\n\t\n\texports.DomUtils = DomUtils;\n\t\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/index.js\", \"/\"))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t  XmlEntities: __webpack_require__(4),\n\t  Html4Entities: __webpack_require__(5),\n\t  Html5Entities: __webpack_require__(6),\n\t  AllHtmlEntities: __webpack_require__(6)\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar ALPHA_INDEX = {\n\t    '&lt': '<',\n\t    '&gt': '>',\n\t    '&quot': '\"',\n\t    '&apos': '\\'',\n\t    '&amp': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&apos;': '\\'',\n\t    '&amp;': '&'\n\t};\n\t\n\tvar CHAR_INDEX = {\n\t    60: 'lt',\n\t    62: 'gt',\n\t    34: 'quot',\n\t    39: 'apos',\n\t    38: 'amp'\n\t};\n\t\n\tvar CHAR_S_INDEX = {\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    '\\'': '&apos;',\n\t    '&': '&amp;'\n\t};\n\t\n\t/**\n\t * @constructor\n\t */\n\tfunction XmlEntities() {}\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tXmlEntities.prototype.encode = function(str) {\n\t    if (str.length === 0) {\n\t        return '';\n\t    }\n\t    return str.replace(/<|>|\"|'|&/g, function(s) {\n\t        return CHAR_S_INDEX[s];\n\t    });\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t XmlEntities.encode = function(str) {\n\t    return new XmlEntities().encode(str);\n\t };\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tXmlEntities.prototype.decode = function(str) {\n\t    if (str.length === 0) {\n\t        return '';\n\t    }\n\t    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n\t        if (s.charAt(1) === '#') {\n\t            var code = s.charAt(2).toLowerCase() === 'x' ?\n\t                parseInt(s.substr(3), 16) :\n\t                parseInt(s.substr(2));\n\t\n\t            if (isNaN(code) || code < -32768 || code > 65535) {\n\t                return '';\n\t            }\n\t            return String.fromCharCode(code);\n\t        }\n\t        return ALPHA_INDEX[s] || s;\n\t    });\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t XmlEntities.decode = function(str) {\n\t    return new XmlEntities().decode(str);\n\t };\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tXmlEntities.prototype.encodeNonUTF = function(str) {\n\t    var strLength = str.length;\n\t    if (strLength === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLength) {\n\t        var c = str.charCodeAt(i);\n\t        var alpha = CHAR_INDEX[c];\n\t        if (alpha) {\n\t            result += \"&\" + alpha + \";\";\n\t            i++;\n\t            continue;\n\t        }\n\t        if (c < 32 || c > 126) {\n\t            result += '&#' + c + ';';\n\t        } else {\n\t            result += str.charAt(i);\n\t        }\n\t        i++;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t XmlEntities.encodeNonUTF = function(str) {\n\t    return new XmlEntities().encodeNonUTF(str);\n\t };\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tXmlEntities.prototype.encodeNonASCII = function(str) {\n\t    var strLenght = str.length;\n\t    if (strLenght === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLenght) {\n\t        var c = str.charCodeAt(i);\n\t        if (c <= 255) {\n\t            result += str[i++];\n\t            continue;\n\t        }\n\t        result += '&#' + c + ';';\n\t        i++;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t XmlEntities.encodeNonASCII = function(str) {\n\t    return new XmlEntities().encodeNonASCII(str);\n\t };\n\t\n\tmodule.exports = XmlEntities;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tvar HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'Oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'oelig', 'oelig', 'scaron', 'scaron', 'yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\n\tvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\t\n\tvar alphaIndex = {};\n\tvar numIndex = {};\n\t\n\tvar i = 0;\n\tvar length = HTML_ALPHA.length;\n\twhile (i < length) {\n\t    var a = HTML_ALPHA[i];\n\t    var c = HTML_CODES[i];\n\t    alphaIndex[a] = String.fromCharCode(c);\n\t    numIndex[c] = a;\n\t    i++;\n\t}\n\t\n\t/**\n\t * @constructor\n\t */\n\tfunction Html4Entities() {}\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.prototype.decode = function(str) {\n\t    if (str.length === 0) {\n\t        return '';\n\t    }\n\t    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n\t        var chr;\n\t        if (entity.charAt(0) === \"#\") {\n\t            var code = entity.charAt(1).toLowerCase() === 'x' ?\n\t                parseInt(entity.substr(2), 16) :\n\t                parseInt(entity.substr(1));\n\t\n\t            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n\t                chr = String.fromCharCode(code);\n\t            }\n\t        } else {\n\t            chr = alphaIndex[entity];\n\t        }\n\t        return chr || s;\n\t    });\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.decode = function(str) {\n\t    return new Html4Entities().decode(str);\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.prototype.encode = function(str) {\n\t    var strLength = str.length;\n\t    if (strLength === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLength) {\n\t        var alpha = numIndex[str.charCodeAt(i)];\n\t        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n\t        i++;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.encode = function(str) {\n\t    return new Html4Entities().encode(str);\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.prototype.encodeNonUTF = function(str) {\n\t    var strLength = str.length;\n\t    if (strLength === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLength) {\n\t        var cc = str.charCodeAt(i);\n\t        var alpha = numIndex[cc];\n\t        if (alpha) {\n\t            result += \"&\" + alpha + \";\";\n\t        } else if (cc < 32 || cc > 126) {\n\t            result += \"&#\" + cc + \";\";\n\t        } else {\n\t            result += str.charAt(i);\n\t        }\n\t        i++;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.encodeNonUTF = function(str) {\n\t    return new Html4Entities().encodeNonUTF(str);\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.prototype.encodeNonASCII = function(str) {\n\t    var strLength = str.length;\n\t    if (strLength === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLength) {\n\t        var c = str.charCodeAt(i);\n\t        if (c <= 255) {\n\t            result += str[i++];\n\t            continue;\n\t        }\n\t        result += '&#' + c + ';';\n\t        i++;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml4Entities.encodeNonASCII = function(str) {\n\t    return new Html4Entities().encodeNonASCII(str);\n\t};\n\t\n\tmodule.exports = Html4Entities;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tvar ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['CloseCurlyDoubleQuote', [8221]], ['CloseCurlyQuote', [8217]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\t\n\tvar alphaIndex = {};\n\tvar charIndex = {};\n\t\n\tcreateIndexes(alphaIndex, charIndex);\n\t\n\t/**\n\t * @constructor\n\t */\n\tfunction Html5Entities() {}\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml5Entities.prototype.decode = function(str) {\n\t    if (str.length === 0) {\n\t        return '';\n\t    }\n\t    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n\t        var chr;\n\t        if (entity.charAt(0) === \"#\") {\n\t            var code = entity.charAt(1) === 'x' ?\n\t                parseInt(entity.substr(2).toLowerCase(), 16) :\n\t                parseInt(entity.substr(1));\n\t\n\t            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n\t                chr = String.fromCharCode(code);\n\t            }\n\t        } else {\n\t            chr = alphaIndex[entity];\n\t        }\n\t        return chr || s;\n\t    });\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t Html5Entities.decode = function(str) {\n\t    return new Html5Entities().decode(str);\n\t };\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml5Entities.prototype.encode = function(str) {\n\t    var strLength = str.length;\n\t    if (strLength === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLength) {\n\t        var charInfo = charIndex[str.charCodeAt(i)];\n\t        if (charInfo) {\n\t            var alpha = charInfo[str.charCodeAt(i + 1)];\n\t            if (alpha) {\n\t                i++;\n\t            } else {\n\t                alpha = charInfo[''];\n\t            }\n\t            if (alpha) {\n\t                result += \"&\" + alpha + \";\";\n\t                i++;\n\t                continue;\n\t            }\n\t        }\n\t        result += str.charAt(i);\n\t        i++;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t Html5Entities.encode = function(str) {\n\t    return new Html5Entities().encode(str);\n\t };\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml5Entities.prototype.encodeNonUTF = function(str) {\n\t    var strLength = str.length;\n\t    if (strLength === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLength) {\n\t        var c = str.charCodeAt(i);\n\t        var charInfo = charIndex[c];\n\t        if (charInfo) {\n\t            var alpha = charInfo[str.charCodeAt(i + 1)];\n\t            if (alpha) {\n\t                i++;\n\t            } else {\n\t                alpha = charInfo[''];\n\t            }\n\t            if (alpha) {\n\t                result += \"&\" + alpha + \";\";\n\t                i++;\n\t                continue;\n\t            }\n\t        }\n\t        if (c < 32 || c > 126) {\n\t            result += '&#' + c + ';';\n\t        } else {\n\t            result += str.charAt(i);\n\t        }\n\t        i++;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t Html5Entities.encodeNonUTF = function(str) {\n\t    return new Html5Entities().encodeNonUTF(str);\n\t };\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\tHtml5Entities.prototype.encodeNonASCII = function(str) {\n\t    var strLength = str.length;\n\t    if (strLength === 0) {\n\t        return '';\n\t    }\n\t    var result = '';\n\t    var i = 0;\n\t    while (i < strLength) {\n\t        var c = str.charCodeAt(i);\n\t        if (c <= 255) {\n\t            result += str[i++];\n\t            continue;\n\t        }\n\t        result += '&#' + c + ';';\n\t        i++\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * @param {String} str\n\t * @returns {String}\n\t */\n\t Html5Entities.encodeNonASCII = function(str) {\n\t    return new Html5Entities().encodeNonASCII(str);\n\t };\n\t\n\t/**\n\t * @param {Object} alphaIndex Passed by reference.\n\t * @param {Object} charIndex Passed by reference.\n\t */\n\tfunction createIndexes(alphaIndex, charIndex) {\n\t    var i = ENTITIES.length;\n\t    var _results = [];\n\t    while (i--) {\n\t        var e = ENTITIES[i];\n\t        var alpha = e[0];\n\t        var chars = e[1];\n\t        var chr = chars[0];\n\t        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n\t        var charInfo;\n\t        if (addChar) {\n\t            charInfo = charIndex[chr] = charIndex[chr] || {};\n\t        }\n\t        if (chars[1]) {\n\t            var chr2 = chars[1];\n\t            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n\t            _results.push(addChar && (charInfo[chr2] = alpha));\n\t        } else {\n\t            alphaIndex[alpha] = String.fromCharCode(chr);\n\t            _results.push(addChar && (charInfo[''] = alpha));\n\t        }\n\t    }\n\t}\n\t\n\tmodule.exports = Html5Entities;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _PathInfo = __webpack_require__(8);\n\t\n\tvar _PathInfo2 = _interopRequireDefault(_PathInfo);\n\t\n\tvar _Paragraph = __webpack_require__(9);\n\t\n\tvar _Paragraph2 = _interopRequireDefault(_Paragraph);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PARAGRAPH_TAGS = ['body', 'blockquote', 'caption', 'center', 'col', 'colgroup', 'dd', 'div', 'dl', 'dt', 'fieldset', 'form', 'legend', 'optgroup', 'option', 'p', 'pre', 'table', 'td', 'textarea', 'tfoot', 'th', 'thead', 'tr', 'ul', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\t/**\n\t * A class for converting a HTML page represented as a DOM object into a list\n\t * of paragraphs.\n\t * @class ParagraphMaker\n\t */\n\t\n\tvar ParagraphMaker = function () {\n\t  function ParagraphMaker() {\n\t    _classCallCheck(this, ParagraphMaker);\n\t\n\t    this.path = new _PathInfo2.default();\n\t    this.paragraphs = [];\n\t    this.paragraph = null;\n\t    this.link = false;\n\t    this.br = false;\n\t    this.startNewParagraph();\n\t  }\n\t\n\t  _createClass(ParagraphMaker, [{\n\t    key: 'startNewParagraph',\n\t    value: function startNewParagraph() {\n\t      if (this.paragraph && this.paragraph.containsText()) {\n\t        this.paragraphs.push(this.paragraph);\n\t      }\n\t\n\t      this.paragraph = new _Paragraph2.default(this.path);\n\t    }\n\t  }, {\n\t    key: 'startElementNS',\n\t    value: function startElementNS(name) {\n\t      this.path.append(name);\n\t      if (PARAGRAPH_TAGS.indexOf(name) !== -1 || name === 'br' && this.br) {\n\t        if (name === 'br') {\n\t          this.paragraph.tagsCount -= 1;\n\t        }\n\t\n\t        this.startNewParagraph();\n\t      } else {\n\t        this.br = name === 'br';\n\t        if (name === 'a') {\n\t          this.link = true;\n\t        }\n\t\n\t        this.paragraph.tagsCount += 1;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'endElementNS',\n\t    value: function endElementNS(name) {\n\t      this.path.pop();\n\t      if (PARAGRAPH_TAGS.indexOf(name) !== -1) {\n\t        this.startNewParagraph();\n\t      }\n\t\n\t      if (name === 'a') {\n\t        this.link = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'characters',\n\t    value: function characters(content) {\n\t      var trim = String.prototype.trim;\n\t      if (!!trim.call(content)) {\n\t        var text = this.paragraph.appendText(content);\n\t        if (this.link) {\n\t          this.paragraph.charsCountInLinks += text.length;\n\t        }\n\t        this.br = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'parseHtmlDocument',\n\t    value: function parseHtmlDocument(root) {\n\t      var _this = this;\n\t\n\t      var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t      root.forEach(function (dom) {\n\t        if (dom.type !== 'directive') {\n\t          if (hasOwnProperty.call(dom, 'children')) {\n\t            _this.startElementNS(dom.name);\n\t            _this.parseHtmlDocument(dom.children);\n\t            _this.endElementNS(dom.name);\n\t          } else {\n\t            if (dom.type === 'text') {\n\t              _this.characters(dom.data);\n\t            } else if (hasOwnProperty.call(dom, 'name')) {\n\t              // support br for multiple lines\n\t              _this.startElementNS(dom.name);\n\t            }\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Converts root document into paragraphs.\n\t     **/\n\t\n\t  }, {\n\t    key: 'makeParagraphs',\n\t    value: function makeParagraphs(root) {\n\t      this.parseHtmlDocument(root);\n\t      console.log('makeParagraphs', this.paragraphs);\n\t      return this.paragraphs;\n\t    }\n\t  }]);\n\t\n\t  return ParagraphMaker;\n\t}();\n\t\n\texports.default = ParagraphMaker;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t *\n\t * list of triples (tag name, order, children)\n\t * @class PathInfo\n\t */\n\tvar PathInfo = function () {\n\t  function PathInfo() {\n\t    _classCallCheck(this, PathInfo);\n\t\n\t    this.elements = [];\n\t  }\n\t\n\t  _createClass(PathInfo, [{\n\t    key: 'dom',\n\t    value: function dom() {\n\t      var html = [];\n\t      // base on tag name\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = this.elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var item = _step.value;\n\t\n\t          html.push(item[0]);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return html.join('.');\n\t    }\n\t  }, {\n\t    key: 'xpath',\n\t    value: function xpath() {\n\t      var path = '';\n\t      // path base on tag name and order\n\t      if (this.elements.length) {\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t          for (var _iterator2 = this.elements[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var item = _step2.value;\n\t\n\t            path += '/' + item[0] + '[' + item[1] + ']';\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t              _iterator2.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError2) {\n\t              throw _iteratorError2;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        path = '/';\n\t      }\n\t      return path;\n\t    }\n\t  }, {\n\t    key: 'append',\n\t    value: function append(tagName) {\n\t      var children = this.getChildren();\n\t      var order = children[tagName] + 1 || 1;\n\t      children[tagName] = order;\n\t      this.elements.push([tagName, order, {}]);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getChildren',\n\t    value: function getChildren() {\n\t      if (this.elements.length) {\n\t        return this.elements[this.elements.length - 1][2];\n\t      }\n\t      return {};\n\t    }\n\t  }, {\n\t    key: 'pop',\n\t    value: function pop() {\n\t      this.elements.pop();\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return PathInfo;\n\t}();\n\t\n\texports.default = PathInfo;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _PathInfo = __webpack_require__(8);\n\t\n\tvar _PathInfo2 = _interopRequireDefault(_PathInfo);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Object representing one block of text in HTML.\n\t * @class Paragraph\n\t */\n\tvar Paragraph = function () {\n\t  function Paragraph() {\n\t    var path = arguments.length <= 0 || arguments[0] === undefined ? _PathInfo2.default : arguments[0];\n\t\n\t    _classCallCheck(this, Paragraph);\n\t\n\t    this.domPath = path.dom();\n\t    this.xpath = path.xpath();\n\t    this.textNodes = [];\n\t    this.charsCountInLinks = 0;\n\t    this.tagsCount = 0;\n\t    this.classType = '';\n\t  }\n\t\n\t  _createClass(Paragraph, [{\n\t    key: 'isHeading',\n\t    value: function isHeading() {\n\t      var re = /\\bh\\d\\b/;\n\t      return this.domPath.search(re);\n\t    }\n\t  }, {\n\t    key: 'isBoilerplate',\n\t    value: function isBoilerplate() {\n\t      return this.classType !== 'good';\n\t    }\n\t  }, {\n\t    key: 'text',\n\t    value: function text() {\n\t      var str = '';\n\t      str = this.textNodes.join('');\n\t      // remove multi space to one space\n\t      str = str.replace(/\\s{2,}/g, ' ');\n\t      // remove lead space\n\t      str = str.replace(/^\\s+/, '');\n\t      // remove trailing space\n\t      str = str.replace(/\\s+$/, '');\n\t      return str;\n\t    }\n\t  }, {\n\t    key: 'len',\n\t    value: function len() {\n\t      return this.text().length;\n\t    }\n\t  }, {\n\t    key: 'wordsCount',\n\t    value: function wordsCount() {\n\t      return this.text().split(' ').length;\n\t    }\n\t  }, {\n\t    key: 'containsText',\n\t    value: function containsText() {\n\t      return this.textNodes.length > 0;\n\t    }\n\t  }, {\n\t    key: 'appendText',\n\t    value: function appendText() {\n\t      var str = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t      var replace = String.prototype.replace;\n\t      var text = replace.call(str, /\\s{2,}/g, ' ');\n\t      this.textNodes.push(text);\n\t      return text;\n\t    }\n\t  }, {\n\t    key: 'stopwordsCount',\n\t    value: function stopwordsCount() {\n\t      var stopwords = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t\n\t      var count = 0;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = this.text().split(' ')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var word = _step.value;\n\t\n\t          if (stopwords.indexOf(word.toLowerCase()) !== -1) {\n\t            count++;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return count;\n\t    }\n\t  }, {\n\t    key: 'stopwordDesity',\n\t    value: function stopwordDesity() {\n\t      var stopwords = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t\n\t      var count = this.wordsCount();\n\t      if (count === 0) {\n\t        return 0;\n\t      }\n\t\n\t      return this.stopwordsCount(stopwords) / count;\n\t    }\n\t  }, {\n\t    key: 'linksDesity',\n\t    value: function linksDesity() {\n\t      var textLength = this.len();\n\t      if (textLength === 0) {\n\t        return 0;\n\t      }\n\t\n\t      return this.charsCountInLinks / textLength;\n\t    }\n\t  }]);\n\t\n\t  return Paragraph;\n\t}();\n\t\n\texports.default = Paragraph;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _sprintfJs = __webpack_require__(11);\n\t\n\tvar _sprintfJs2 = _interopRequireDefault(_sprintfJs);\n\t\n\tvar _htmlEntities = __webpack_require__(3);\n\t\n\tvar _htmlEntities2 = _interopRequireDefault(_htmlEntities);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Presenter = function () {\n\t  function Presenter() {\n\t    _classCallCheck(this, Presenter);\n\t  }\n\t\n\t  _createClass(Presenter, [{\n\t    key: 'defaultOuptut',\n\t\n\t\n\t    /**\n\t     * Outputs the paragraphs as:\n\t     * <tag> text of the first paragraph\n\t     * <tag> text of the second paragraph\n\t     * ...\n\t     * where <tag> is <p>, <h> or <b> which indicates\n\t     * standard paragraph, heading or boilerplate respecitvely.\n\t     * */\n\t    value: function defaultOuptut(paragraphs) {\n\t      var noBoilerPlate = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      var result = [];\n\t      var htmlDecoding = new _htmlEntities2.default.AllHtmlEntities();\n\t\n\t      paragraphs.forEach(function (paragraph) {\n\t        var tag = '';\n\t        if (paragraph.classType === 'good') {\n\t          if (paragraph.isHeading()) {\n\t            tag = 'h';\n\t          } else {\n\t            tag = 'p';\n\t          }\n\t        } else if (!noBoilerPlate) {\n\t          tag = 'b';\n\t        }\n\t        if (tag !== '') {\n\t          result.push(_sprintfJs2.default.sprintf('<%s> %s', tag, htmlDecoding.encode(paragraph.text())));\n\t        }\n\t      });\n\t      return result.join('\\r\\n');\n\t    }\n\t\n\t    /**\n\t     * Same as output_default, but only <p> tags are used and the following\n\t     * attributes are added: class, cfclass and heading.\n\t     * */\n\t\n\t  }, {\n\t    key: 'detailOuptut',\n\t    value: function detailOuptut(paragraphs) {\n\t      var result = [];\n\t      var htmlDecoding = new _htmlEntities2.default.AllHtmlEntities();\n\t\n\t      paragraphs.forEach(function (paragraph) {\n\t        result.push(_sprintfJs2.default.sprintf('<p class=\"%s\" cfclass=\"%s\" heading=\"%i\" xpath=\"%s\"> %s', paragraph.classType, paragraph.cfClass, Number(paragraph.isHeading(), 10), paragraph.xpath, htmlDecoding.encode(paragraph.text())));\n\t      });\n\t      return result.join('\\r\\n');\n\t    }\n\t\n\t    /**\n\t     * Outputs the paragraphs in a KrdWrd compatible format:\n\t     * class<TAB>first text node\n\t     * class<TAB>second text node\n\t     * ...\n\t     * where class is 1, 2 or 3 which means\n\t     * boilerplate, undecided or good respectively. Headings are output as\n\t     * undecided.\n\t     * */\n\t\n\t  }, {\n\t    key: 'krdwrdOuptut',\n\t    value: function krdwrdOuptut(paragraphs) {\n\t      var result = [];\n\t      paragraphs.forEach(function (paragraph) {\n\t        var cls = 1;\n\t        if (['good', 'neargood'].indexOf(paragraph.classType) !== -1) {\n\t          if (paragraph.isHeading()) {\n\t            cls = 2;\n\t          } else {\n\t            cls = 3;\n\t          }\n\t        }\n\t\n\t        for (var index = 0; index < paragraph.textNodes.length; index++) {\n\t          var str = paragraph.textNodes[index];\n\t          // remove lead space\n\t          str = str.replace(/^\\s+/, '');\n\t          // remove trailing space\n\t          str = str.replace(/\\s+$/, '');\n\t          result.push(_sprintfJs2.default.sprintf('%i\\t%s', cls, str));\n\t        }\n\t      });\n\t      return result.join('\\r\\n');\n\t    }\n\t  }]);\n\t\n\t  return Presenter;\n\t}();\n\t\n\texports.default = Presenter;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function(window) {\n\t    var re = {\n\t        not_string: /[^s]/,\n\t        number: /[diefg]/,\n\t        json: /[j]/,\n\t        not_json: /[^j]/,\n\t        text: /^[^\\x25]+/,\n\t        modulo: /^\\x25{2}/,\n\t        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijosuxX])/,\n\t        key: /^([a-z_][a-z_\\d]*)/i,\n\t        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n\t        index_access: /^\\[(\\d+)\\]/,\n\t        sign: /^[\\+\\-]/\n\t    }\n\t\n\t    function sprintf() {\n\t        var key = arguments[0], cache = sprintf.cache\n\t        if (!(cache[key] && cache.hasOwnProperty(key))) {\n\t            cache[key] = sprintf.parse(key)\n\t        }\n\t        return sprintf.format.call(null, cache[key], arguments)\n\t    }\n\t\n\t    sprintf.format = function(parse_tree, argv) {\n\t        var cursor = 1, tree_length = parse_tree.length, node_type = \"\", arg, output = [], i, k, match, pad, pad_character, pad_length, is_positive = true, sign = \"\"\n\t        for (i = 0; i < tree_length; i++) {\n\t            node_type = get_type(parse_tree[i])\n\t            if (node_type === \"string\") {\n\t                output[output.length] = parse_tree[i]\n\t            }\n\t            else if (node_type === \"array\") {\n\t                match = parse_tree[i] // convenience purposes only\n\t                if (match[2]) { // keyword argument\n\t                    arg = argv[cursor]\n\t                    for (k = 0; k < match[2].length; k++) {\n\t                        if (!arg.hasOwnProperty(match[2][k])) {\n\t                            throw new Error(sprintf(\"[sprintf] property '%s' does not exist\", match[2][k]))\n\t                        }\n\t                        arg = arg[match[2][k]]\n\t                    }\n\t                }\n\t                else if (match[1]) { // positional argument (explicit)\n\t                    arg = argv[match[1]]\n\t                }\n\t                else { // positional argument (implicit)\n\t                    arg = argv[cursor++]\n\t                }\n\t\n\t                if (get_type(arg) == \"function\") {\n\t                    arg = arg()\n\t                }\n\t\n\t                if (re.not_string.test(match[8]) && re.not_json.test(match[8]) && (get_type(arg) != \"number\" && isNaN(arg))) {\n\t                    throw new TypeError(sprintf(\"[sprintf] expecting number but found %s\", get_type(arg)))\n\t                }\n\t\n\t                if (re.number.test(match[8])) {\n\t                    is_positive = arg >= 0\n\t                }\n\t\n\t                switch (match[8]) {\n\t                    case \"b\":\n\t                        arg = arg.toString(2)\n\t                    break\n\t                    case \"c\":\n\t                        arg = String.fromCharCode(arg)\n\t                    break\n\t                    case \"d\":\n\t                    case \"i\":\n\t                        arg = parseInt(arg, 10)\n\t                    break\n\t                    case \"j\":\n\t                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0)\n\t                    break\n\t                    case \"e\":\n\t                        arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential()\n\t                    break\n\t                    case \"f\":\n\t                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg)\n\t                    break\n\t                    case \"g\":\n\t                        arg = match[7] ? parseFloat(arg).toPrecision(match[7]) : parseFloat(arg)\n\t                    break\n\t                    case \"o\":\n\t                        arg = arg.toString(8)\n\t                    break\n\t                    case \"s\":\n\t                        arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg)\n\t                    break\n\t                    case \"u\":\n\t                        arg = arg >>> 0\n\t                    break\n\t                    case \"x\":\n\t                        arg = arg.toString(16)\n\t                    break\n\t                    case \"X\":\n\t                        arg = arg.toString(16).toUpperCase()\n\t                    break\n\t                }\n\t                if (re.json.test(match[8])) {\n\t                    output[output.length] = arg\n\t                }\n\t                else {\n\t                    if (re.number.test(match[8]) && (!is_positive || match[3])) {\n\t                        sign = is_positive ? \"+\" : \"-\"\n\t                        arg = arg.toString().replace(re.sign, \"\")\n\t                    }\n\t                    else {\n\t                        sign = \"\"\n\t                    }\n\t                    pad_character = match[4] ? match[4] === \"0\" ? \"0\" : match[4].charAt(1) : \" \"\n\t                    pad_length = match[6] - (sign + arg).length\n\t                    pad = match[6] ? (pad_length > 0 ? str_repeat(pad_character, pad_length) : \"\") : \"\"\n\t                    output[output.length] = match[5] ? sign + arg + pad : (pad_character === \"0\" ? sign + pad + arg : pad + sign + arg)\n\t                }\n\t            }\n\t        }\n\t        return output.join(\"\")\n\t    }\n\t\n\t    sprintf.cache = {}\n\t\n\t    sprintf.parse = function(fmt) {\n\t        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0\n\t        while (_fmt) {\n\t            if ((match = re.text.exec(_fmt)) !== null) {\n\t                parse_tree[parse_tree.length] = match[0]\n\t            }\n\t            else if ((match = re.modulo.exec(_fmt)) !== null) {\n\t                parse_tree[parse_tree.length] = \"%\"\n\t            }\n\t            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n\t                if (match[2]) {\n\t                    arg_names |= 1\n\t                    var field_list = [], replacement_field = match[2], field_match = []\n\t                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n\t                        field_list[field_list.length] = field_match[1]\n\t                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== \"\") {\n\t                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n\t                                field_list[field_list.length] = field_match[1]\n\t                            }\n\t                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n\t                                field_list[field_list.length] = field_match[1]\n\t                            }\n\t                            else {\n\t                                throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n\t                            }\n\t                        }\n\t                    }\n\t                    else {\n\t                        throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n\t                    }\n\t                    match[2] = field_list\n\t                }\n\t                else {\n\t                    arg_names |= 2\n\t                }\n\t                if (arg_names === 3) {\n\t                    throw new Error(\"[sprintf] mixing positional and named placeholders is not (yet) supported\")\n\t                }\n\t                parse_tree[parse_tree.length] = match\n\t            }\n\t            else {\n\t                throw new SyntaxError(\"[sprintf] unexpected placeholder\")\n\t            }\n\t            _fmt = _fmt.substring(match[0].length)\n\t        }\n\t        return parse_tree\n\t    }\n\t\n\t    var vsprintf = function(fmt, argv, _argv) {\n\t        _argv = (argv || []).slice(0)\n\t        _argv.splice(0, 0, fmt)\n\t        return sprintf.apply(null, _argv)\n\t    }\n\t\n\t    /**\n\t     * helpers\n\t     */\n\t    function get_type(variable) {\n\t        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase()\n\t    }\n\t\n\t    function str_repeat(input, multiplier) {\n\t        return Array(multiplier + 1).join(input)\n\t    }\n\t\n\t    /**\n\t     * export to either browser or node.js\n\t     */\n\t    if (true) {\n\t        exports.sprintf = sprintf\n\t        exports.vsprintf = vsprintf\n\t    }\n\t    else {\n\t        window.sprintf = sprintf\n\t        window.vsprintf = vsprintf\n\t\n\t        if (typeof define === \"function\" && define.amd) {\n\t            define(function() {\n\t                return {\n\t                    sprintf: sprintf,\n\t                    vsprintf: vsprintf\n\t                }\n\t            })\n\t        }\n\t    }\n\t})(typeof window === \"undefined\" ? this : window);\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=justext.js.map"],"sourceRoot":"/source/"}